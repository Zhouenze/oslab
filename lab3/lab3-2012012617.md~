# 操作系统Lab3实验报告

2012012617
计22
周恩泽

# 练习零：填写已有实验
用meld

# 练习一：给未被映射的地址映射上物理页

# 我的设计实现过程
调用`get_pte`根据地址查找相应的页表项。如果二级页表不存在则为它分配一页。
对空页表项即映射不存在的情况，调用`pgdir_alloc_page`分配一个物理页并将其和所需逻辑地址相连接。

# 和标准答案的差别
注释指导很清楚所以基本没差，也就是返回信息完整一点。

# PDE和PTE中组成部分对ucore实现页替换算法的潜在用处
PDE和PTE的前20位用来寻找页表，后面的PTE_W（可读写位），PTE_U（用户态位）可让操作系统记录缺页异常信息供处理用，PTE_D（脏块位）可用以实现改进的时钟算法。

# 缺页服务例程在执行过程中出现页访问异常，硬件需要做哪些事情
记录当前寄存器值，保持现场，但之后应该会崩溃。

# 练习二：实现寻找虚拟地址对应的页表项

# 我的设计实现过程
在do_pgfault函数中，对页表项非空的情况，换入页面并连接。
在`_fifo_map_swappable`函数中，将最近访问页放入队列头。在`_fifo_swap_out_victim`函数中弹出队列尾的页面。

# 和标准答案的差别
根据实验指导文档和注释，我认为答案的队列顺序不直观，改成新访问页加入队尾、弹出队头页面更好。

# 实现"extended clock页替换算法"
需要扩展，使用page结构中的flags来记录页访问和修改标志位。

- 需要被换出的页的特征是什么
在被轮询到时访问位和修改位都为0
- ucore中如何判断具有这样特征的页
看flags中的标志位
- 何时进行换入和换出操作
缺页处理时

# 重要知识点
FIFO页替换算法
页和页表的分配
虚拟存储的概念，从硬盘中读写资源
缺页异常的处理流程

# 未涉及知识点
其他局部页置换算法
全局页置换算法
